<!doctype html>
<html lang="en">
<head>
  <title> Constituencies </title>
</head>
<div class="wrapper">
  <div class="heading_container">
    <h2> Constituencies </h2>
    <button id="search-button" title="Apply filters" class="filter_button">Search</button>
  </div>

  <table id="constituencies-table" class="display">
    <thead>
      <tr>
        <th> Constituency ID </th>
        <th> Constituency Name </th>
        <th> Constituency Type </th>
        <th> Voters </th>
        <th> Candidate Count </th>
      </tr>
      <tr class="filters">
        <th><input type="text" id="constituency-id-search" placeholder="Search ID"></th>
        <th><input type="text" id="constituency-name-search" placeholder="Search Name"></th>
        <th>
          <select id="constituency-type-select">
            <option value="">All</option>
          </select>
        </th>
        <th><input type="text" name="voters" id="consituency_voter_count" placeholder="Number of voters"></th>
        <th><input type="text" name="candidate_count" id="consituency_cc" placeholder="Candidate Count"></th>
      </tr>
    </thead>
    <tbody>
      <!-- Data will be inserted here dynamically -->
    </tbody>
  </table>
  <div class="statistics">
    <p id="total_voters_in_a_draw"></p>
    <p id="average_cancount"></p>
  </div>
</div>
  <script>
    let totalVoters = document.getElementById('total_voters_in_a_draw');
    let candidateCount = document.getElementById('total_cancount_in_a_draw');
    $(document).ready(function() {
      let cc = 0;
      let voter_count = 0;
      $( ":text" ).val('');
      var table = $('#constituencies-table').DataTable({
        layout:{
          top2Start: 'pageLength',
          topStart: 'info',
          topEnd: 'paging',
          bottomStart: 'pageLength',
          bottomEnd: 'paging',
        },
        stateSave: true,
        orderCellsTop: true,
        pagingType: 'full_numbers',
        searchable: true,
        deferRender: true,
        processing: true,
        serverSide: true,
        regex: false,
        ajax: {
          url: '/constituencies.json',
          data: function(d) {
            console.log(d);
            cc = 0;
            voter_count = 0;
            d.columns[0].search.value = $('#constituency-id-search').val();
            d.columns[1].search.value = $('#constituency-name-search').val();
            d.columns[2].search.value = $('#constituency-type-select').val();
          },
          dataSrc: function(json) {
            json.recordsTotal = json.total_records;
            json.recordsFiltered = json.meta.total_count;
            return json.constituencies;
          },
          error: function(xhr, status, errr) {
            alert(status);
          },
        },
        columns: [
          { data: 'constituency_id' },
          { data: 'constituency_name', render: function(data, type, row) { // Hyperlink to /constituencies/:id
              return `<a href="/constituencies/${row._id}">${data}</a>`; },
          },
          { data: 'constituency_type' },
          { data: 'voters', render: function(data, type, row) { // Hyperlink to /constituencies/:id
              voter_count += data;
              return `${data}`; 
          }},
          { data: 'candidate_count', render: function(data, type, row) { // Hyperlink to /constituencies/:id
              cc += data;
              return `${data}`;
          }},
        ],
        pageLength: 10, // default page length
        lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]], // dropdown options
        order: [[0, 'asc']],
        initComplete: function () {
          // Fetch and populate gender options
          $.ajax({
            url: '/constituencies/type_options',
            method: 'GET',
            success: function(data) {
              const typeSelect = $('#constituency-type-select');
              data.forEach(type => {
                typeSelect.append(`<option value="${type}">${type}</option>`);
              });
            }, 
            error: function(xhr, status, errr) {
              alert(status, errr);
            }
          });
        },
        drawCallback: function () {
          console.log("drawCallback call");
          totalVoters.textContent = `Total count of candidates = ${cc}`;
          candidateCount.textContent = `Total count of voters = ${voter_count}`;
        },
      });

      // Reload table if user hit enter after entering input in text field
      $('input[type=text]').keydown(function(e) {
        if (e.key === "Enter") {
          table.ajax.reload();
        }
      });
      
      // Reload table if user changes option from dropdown
      $('#constituency-type-select').change(function() {
        table.ajax.reload();
      })

      // Handle search button click
      $('#search-button').on('click', function() {
        table.ajax.reload();
      });
      
      $('#constituencies-table_filter').hide();
    });
  </script>
</body>
</html>
